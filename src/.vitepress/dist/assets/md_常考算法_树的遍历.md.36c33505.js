import{_ as n,c as s,o as a,a as p}from"./app.952c636c.js";const h='{"title":"\u6811\u7684\u904D\u5386","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6DF1\u5EA6\u4F18\u5148","slug":"\u6DF1\u5EA6\u4F18\u5148"},{"level":2,"title":"\u5E7F\u5EA6\u4F18\u5148","slug":"\u5E7F\u5EA6\u4F18\u5148"}],"relativePath":"md/\u5E38\u8003\u7B97\u6CD5/\u6811\u7684\u904D\u5386.md","lastUpdated":1648885436705}',t={},o=p(`<h1 id="\u6811\u7684\u904D\u5386" tabindex="-1">\u6811\u7684\u904D\u5386 <a class="header-anchor" href="#\u6811\u7684\u904D\u5386" aria-hidden="true">#</a></h1><div class="language-javascript"><pre><code><span class="token keyword">const</span> tree <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;e&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;f&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;g&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;a2&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;b2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;e2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;c2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;f2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;d2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;g2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6DF1\u5EA6\u4F18\u5148" tabindex="-1">\u6DF1\u5EA6\u4F18\u5148 <a class="header-anchor" href="#\u6DF1\u5EA6\u4F18\u5148" aria-hidden="true">#</a></h2><h4 id="\u9012\u5F52\u5B9E\u73B0" tabindex="-1">\u9012\u5F52\u5B9E\u73B0 <a class="header-anchor" href="#\u9012\u5F52\u5B9E\u73B0" aria-hidden="true">#</a></h4><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">deepTraversal</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">childNode</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token function">deepTraversal</span><span class="token punctuation">(</span>childNode<span class="token punctuation">,</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">deepTraversal</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="\u5806\u6808\u5B9E\u73B0" tabindex="-1">\u5806\u6808\u5B9E\u73B0 <a class="header-anchor" href="#\u5806\u6808\u5B9E\u73B0" aria-hidden="true">#</a></h4><div class="language-javascript"><pre><code>
<span class="token keyword">const</span> <span class="token function-variable function">deepTraversalByStacks</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> stacks <span class="token operator">=</span> <span class="token punctuation">[</span>node<span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>stacks<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> stacks<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span>
      stacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>current<span class="token punctuation">.</span>children<span class="token punctuation">,</span><span class="token operator">...</span>stacks<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">deepTraversalByStacks</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u5E7F\u5EA6\u4F18\u5148" tabindex="-1">\u5E7F\u5EA6\u4F18\u5148 <a class="header-anchor" href="#\u5E7F\u5EA6\u4F18\u5148" aria-hidden="true">#</a></h2><h4 id="\u5806\u6808\u5B9E\u73B0-1" tabindex="-1">\u5806\u6808\u5B9E\u73B0 <a class="header-anchor" href="#\u5806\u6808\u5B9E\u73B0-1" aria-hidden="true">#</a></h4><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">widthTraversal</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> stacks <span class="token operator">=</span> <span class="token punctuation">[</span>node<span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>stacks<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> stacks<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span>
      stacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>stacks<span class="token punctuation">,</span><span class="token operator">...</span>current<span class="token punctuation">.</span>children<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">widthTraversal</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,10),e=[o];function c(l,u,r,k,i,d){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{h as __pageData,f as default};
