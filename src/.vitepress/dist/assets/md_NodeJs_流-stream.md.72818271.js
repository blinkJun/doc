import{_ as n,c as s,o as a,a as t}from"./app.952c636c.js";const m='{"title":"\u6D41 - stream","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6587\u4EF6\u7684\u64CD\u4F5C\u65B9\u5F0F","slug":"\u6587\u4EF6\u7684\u64CD\u4F5C\u65B9\u5F0F"},{"level":3,"title":"\u57FA\u4E8E\u4E00\u6B21\u6027\u8BFB\u53D6\u7684\u6587\u4EF6\u64CD\u4F5C","slug":"\u57FA\u4E8E\u4E00\u6B21\u6027\u8BFB\u53D6\u7684\u6587\u4EF6\u64CD\u4F5C"},{"level":3,"title":"\u57FA\u4E8Eopen\u3001read\u3001write\u5185\u5B58\u64CD\u4F5C\u7684\u6587\u4EF6\u64CD\u4F5C","slug":"\u57FA\u4E8Eopen\u3001read\u3001write\u5185\u5B58\u64CD\u4F5C\u7684\u6587\u4EF6\u64CD\u4F5C"},{"level":3,"title":"\u57FA\u4E8E stream \u7684\u6D41\u64CD\u4F5C","slug":"\u57FA\u4E8E-stream-\u7684\u6D41\u64CD\u4F5C"},{"level":2,"title":"Stream\u6A21\u5757","slug":"stream\u6A21\u5757"},{"level":3,"title":"\u53EF\u8BFB\u6D41\u7684\u5B9E\u73B0","slug":"\u53EF\u8BFB\u6D41\u7684\u5B9E\u73B0"},{"level":3,"title":"\u53EF\u5199\u6D41\u7684\u5B9E\u73B0","slug":"\u53EF\u5199\u6D41\u7684\u5B9E\u73B0"},{"level":3,"title":"\u8F6C\u6362\u6D41\u7684\u5B9E\u73B0\uFF1ATransform","slug":"\u8F6C\u6362\u6D41\u7684\u5B9E\u73B0\uFF1Atransform"}],"relativePath":"md/NodeJs/\u6D41-stream.md","lastUpdated":1662195531763}',p={},o=t(`<h1 id="\u6D41-stream" tabindex="-1">\u6D41 - <code>stream</code> <a class="header-anchor" href="#\u6D41-stream" aria-hidden="true">#</a></h1><p>\u4E13\u95E8\u7528\u4E8E\u5904\u7406\u6570\u636E\u7684\u62BD\u8C61\u63A5\u53E3\u7C7B\u3002</p><h2 id="\u6587\u4EF6\u7684\u64CD\u4F5C\u65B9\u5F0F" tabindex="-1">\u6587\u4EF6\u7684\u64CD\u4F5C\u65B9\u5F0F <a class="header-anchor" href="#\u6587\u4EF6\u7684\u64CD\u4F5C\u65B9\u5F0F" aria-hidden="true">#</a></h2><h3 id="\u57FA\u4E8E\u4E00\u6B21\u6027\u8BFB\u53D6\u7684\u6587\u4EF6\u64CD\u4F5C" tabindex="-1">\u57FA\u4E8E\u4E00\u6B21\u6027\u8BFB\u53D6\u7684\u6587\u4EF6\u64CD\u4F5C <a class="header-anchor" href="#\u57FA\u4E8E\u4E00\u6B21\u6027\u8BFB\u53D6\u7684\u6587\u4EF6\u64CD\u4F5C" aria-hidden="true">#</a></h3><ol><li>\u6709\u4E86<code>nodejs</code>\u4E4B\u540E\uFF0C\u6211\u4EEC\u5177\u5907\u4E86\u4F7F\u7528<code>js</code>\u64CD\u4F5C\u6765\u64CD\u4F5C\u4E8C\u8FDB\u5236\u7684\u80FD\u529B</li><li>\u4E00\u6B21\u6027\u8BFB\u53D6\uFF1A</li></ol><div class="language-js"><pre><code>  <span class="token keyword">const</span> fs <span class="token operator">=</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./read.txt&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// &lt;Buffer ...&gt; \u4E8C\u8FDB\u5236\u6570\u636E</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u6570\u636E</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./write.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6210\u529F\uFF01&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5B58\u5728\u7684\u7F3A\u9677\uFF1A\u5C06\u78C1\u76D8\u7684\u6570\u636E\u5168\u90E8\u8BFB\u53D6\u5230\u5185\u5B58\u4E2D\uFF0C\u5185\u5B58\u5360\u7528\u91CF\u5927\uFF0C\u4E0D\u9002\u5408\u5927\u6587\u4EF6\u64CD\u4F5C\u3002</p><h3 id="\u57FA\u4E8Eopen\u3001read\u3001write\u5185\u5B58\u64CD\u4F5C\u7684\u6587\u4EF6\u64CD\u4F5C" tabindex="-1">\u57FA\u4E8E<code>open</code>\u3001<code>read</code>\u3001<code>write</code>\u5185\u5B58\u64CD\u4F5C\u7684\u6587\u4EF6\u64CD\u4F5C <a class="header-anchor" href="#\u57FA\u4E8Eopen\u3001read\u3001write\u5185\u5B58\u64CD\u4F5C\u7684\u6587\u4EF6\u64CD\u4F5C" aria-hidden="true">#</a></h3><ol><li><code>nodejs</code>\u63D0\u4F9B\u4E86\u4E00\u79CD\u6570\u636E\u7C7B\u578B\u7C7B\u578B\u6765\u5B58\u653E\u4E8C\u8FDB\u5236\uFF1A\u5185\u5B58\u7A7A\u95F4-<code>Buffer</code>\uFF0C\u5728\u5185\u5B58\u7F13\u51B2\u533A\u5B58\u653E\u6570\u636E</li></ol><div class="language-js"><pre><code>  <span class="token comment">// \u7533\u8BF7\u7A7A\u95F4</span>
  <span class="token keyword">let</span> buf1 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>

  <span class="token comment">// \u6A21\u62DF\u6587\u4EF6\u4F7F\u7528\u7A7A\u95F4</span>
  <span class="token keyword">let</span> buf2 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
</code></pre></div><ol start="2"><li>\u5C06\u5927\u6587\u4EF6\u4E00\u90E8\u5206\u4E00\u90E8\u5206\u7684\u8BFB\u53D6\u5E76\u5199\u5165\u6587\u4EF6\uFF0C\u89E3\u51B3\u5185\u5B58\u5360\u7528\u8FC7\u5927\u7684\u95EE\u9898\uFF1A</li></ol><div class="language-js"><pre><code> <span class="token keyword">const</span> <span class="token punctuation">{</span>open<span class="token punctuation">,</span>read<span class="token punctuation">,</span>write<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

 <span class="token comment">// \u3010\u8BFB\u5C31\u662F\u5199\u3011\uFF0C\u8BFB\u53D6\u6570\u636E\u653E\u5165\u5185\u5BB9\u7A7A\u95F4\uFF0C\u53EF\u91CD\u590D\u64CD\u4F5C\u8BFB\u53D6\u6570\u636E</span>
 <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>rfd</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
   <span class="token comment">// \u7533\u8BF7\u5185\u5B58\u7A7A\u95F4</span>
   <span class="token keyword">const</span> buff <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
   <span class="token comment">// \u5C06\u6570\u636E\u8BFB\u53D6\u5165\u5185\u5B58\u7A7A\u95F4</span>
   <span class="token function">read</span><span class="token punctuation">(</span>rfd<span class="token punctuation">,</span>buff<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>readBytes<span class="token punctuation">,</span>buf</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
     <span class="token comment">// \u8BFB\u53D6\u5230\u7684\u6570\u636E</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>

 <span class="token comment">// \u3010\u5199\u5C31\u662F\u8BFB\u3011\uFF0C\u8981\u5199\u5165\u6570\u636E\u5230\u6587\u4EF6\uFF0C\u5219\u9700\u8981\u8BFB\u53D6\u5185\u5B58\u4E2D\u7684\u6570\u636E</span>
 <span class="token keyword">let</span> outputBuf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
 <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./test-output.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>wfd</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
   <span class="token function">write</span><span class="token punctuation">(</span>wfd<span class="token punctuation">,</span>outputBuf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>written<span class="token punctuation">,</span>buf</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
     <span class="token comment">// \u67E5\u770B\u6587\u4EF6\u5185\u5BB9</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5B58\u5728\u7684\u95EE\u9898\uFF1A\u4E0D\u77E5\u9053\u7533\u8BF7\u591A\u5C11\u5185\u5B58\u5408\u9002\u3001\u8BED\u6CD5\u590D\u6742</p><h3 id="\u57FA\u4E8E-stream-\u7684\u6D41\u64CD\u4F5C" tabindex="-1">\u57FA\u4E8E <code>stream</code> \u7684\u6D41\u64CD\u4F5C <a class="header-anchor" href="#\u57FA\u4E8E-stream-\u7684\u6D41\u64CD\u4F5C" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>createReadStream<span class="token punctuation">,</span>createWriteStream<span class="token punctuation">,</span>pipeline<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> rs <span class="token operator">=</span> <span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;ouput.txt&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4ECE\u53EF\u8BFB\u6D41\u6D41\u5411\u53EF\u5199\u6D41</span>
rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528pipeline \u53EF\u4EE5\u5904\u7406\u9519\u8BEF\uFF0C\u8F6C\u6362\u6570\u636E</span>
<span class="token function">pipeline</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span>ws<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="stream\u6A21\u5757" tabindex="-1"><code>Stream</code>\u6A21\u5757 <a class="header-anchor" href="#stream\u6A21\u5757" aria-hidden="true">#</a></h2><p>\u5728\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u4F7F\u7528\u5230\u6D41\uFF1F</p><ol><li>\u4F7F\u7528\u5230\u4E86\u5185\u7F6E\u7684\u5B9E\u73B0\u6D41\u63A5\u53E3\u7684\u5185\u7F6E\u6A21\u5757\uFF08<code>fs</code>\u3001<code>http</code>\u3001<code>zlib</code>\u3001<code>net</code>\uFF09</li><li>\u81EA\u5B9A\u4E49\u7C7B\u7EE7\u627F <code>Stream</code> \u6A21\u5757\u5185\u90E8\u5B9A\u4E49\u7684\u7C7B</li></ol><p><code>Stream</code>\u5B9A\u4E49\u4E864\u4E2A\u7C7B\uFF0C\u5206\u522B\u8868\u793A4\u79CD\u6D41\uFF1A</p><ul><li>\u53EF\u8BFB\u6D41</li><li>\u53EF\u5199\u6D41</li><li>\u8F6C\u6362\u6D41(\u53CC\u5DE5\u6D41)</li></ul><h3 id="\u53EF\u8BFB\u6D41\u7684\u5B9E\u73B0" tabindex="-1">\u53EF\u8BFB\u6D41\u7684\u5B9E\u73B0 <a class="header-anchor" href="#\u53EF\u8BFB\u6D41\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>Readable<span class="token punctuation">,</span>Writable<span class="token punctuation">}</span> <span class="token operator">=</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">MyReadable</span> <span class="token keyword">extends</span> <span class="token class-name">Readable</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5B9E\u73B0 Readable \u62BD\u8C61\u65B9\u6CD5</span>
  <span class="token function">_read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u6570\u636E\u63A8\u5165\u53EF\u8BFB\u6D41\u5185\u5B58</span>
    <span class="token comment">// \u5F53 push null \u65F6\u8868\u793A\u6570\u636E\u8BFB\u53D6\u5B8C\u6BD5</span>
    <span class="token keyword">const</span> chunk <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;h&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyReadable</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>

<span class="token comment">// \u6D88\u8D39\u53EF\u8BFB\u6D41\u7684\u65B9\u5F0F</span>

<span class="token comment">// 1. \u975E\u6D41\u52A8\u6A21\u5F0F</span>
rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;readable&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> chunk
  <span class="token keyword">while</span><span class="token punctuation">(</span>chunk <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 2. \u6D41\u52A8\u6A21\u5F0F</span>
rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5176\u4ED6\u53EF\u7528\u4E8B\u4EF6</span>
rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BFB\u53D6\u5B8C\u6BD5&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u53EF\u5199\u6D41\u7684\u5B9E\u73B0" tabindex="-1">\u53EF\u5199\u6D41\u7684\u5B9E\u73B0 <a class="header-anchor" href="#\u53EF\u5199\u6D41\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>Readable<span class="token punctuation">,</span>Writable<span class="token punctuation">}</span> <span class="token operator">=</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">MyWritable</span> <span class="token keyword">extends</span> <span class="token class-name">Writable</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">_write</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>encoding<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u6570\u636E\u8FDB\u884C\u64CD\u4F5C</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">,</span><span class="token punctuation">{</span>encoding<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528 objectMode \u53EF\u8BFB\u53D6 js\u5BF9\u8C61</span>
<span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyWritable</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">objectMode</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

ws<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>

ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u5B8C\u6BD5&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u8F6C\u6362\u6D41\u7684\u5B9E\u73B0\uFF1Atransform" tabindex="-1">\u8F6C\u6362\u6D41\u7684\u5B9E\u73B0\uFF1A<code>Transform</code> <a class="header-anchor" href="#\u8F6C\u6362\u6D41\u7684\u5B9E\u73B0\uFF1Atransform" aria-hidden="true">#</a></h3><p>\u540C\u65F6\u5B9E\u73B0\u4E86 <code>Readable</code> \u548C <code>Writable</code> \u7684\u6D41\uFF0C\u5373\u53EF\u4EE5\u4F5C\u4E3A\u4E0A\u6E38\u751F\u4EA7\u6570\u636E\uFF0C\u53C8\u53EF\u4EE5\u4F5C\u4E3A\u4E0B\u6E38\u6D88\u8D39\u6570\u636E\uFF0C\u8FD9\u6837\u53EF\u4EE5\u5904\u4E8E\u6570\u636E\u6D41\u52A8\u7BA1\u9053\u7684\u4E2D\u95F4\u90E8\u5206 <code>rws</code>:</p><div class="language-js"><pre><code>rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>rws<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>Transform<span class="token punctuation">,</span>pipeline<span class="token punctuation">}</span> <span class="token operator">=</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">MyTransform</span> <span class="token keyword">extends</span> <span class="token class-name">Transform</span><span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8F6C\u6362\u6570\u636E</span>
  <span class="token function">_transform</span><span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span>encoding<span class="token punctuation">,</span>done</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8F6C\u6362\u4E3A\u5927\u5199</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4F1A\u5728\u6570\u636E\u6D41\u7684\u5C3E\u90E8\u88AB\u8C03\u7528</span>
  <span class="token function">_flush</span><span class="token punctuation">(</span><span class="token parameter">done</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;\u6DFB\u52A0\u989D\u5916\u6570\u636E&#39;</span><span class="token punctuation">)</span>
    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> rs <span class="token operator">=</span> <span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;ouput.txt&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">pipeline</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span>ts<span class="token punctuation">,</span>ws<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,28),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var g=n(p,[["render",e]]);export{m as __pageData,g as default};
